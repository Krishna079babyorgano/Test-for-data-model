{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOBYGu7qo6DMBcCkSteTNHb"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"w4ietBUn8fL7","executionInfo":{"status":"ok","timestamp":1730108243641,"user_tz":-330,"elapsed":26451,"user":{"displayName":"Baby Organo","userId":"18045061936877554975"}}},"outputs":[],"source":["import pandas as pd\n","from transformers import TapasTokenizer, TapasForQuestionAnswering\n","\n","from google.colab import auth\n","auth.authenticate_user()\n","\n","import gspread\n","from google.auth import default\n","\n","import torch\n"]},{"cell_type":"code","source":["# Authenticate and fetch the Google Sheets data\n","creds, _ = default()\n","gc = gspread.authorize(creds)\n","worksheet = gc.open_by_url(\"https://docs.google.com/spreadsheets/d/1DA6qmuwz3I-tkmAV-1M8harQUldbSRmWoymjGcNzw3s/edit?gid=698188664#gid=698188664\").sheet1\n","data = pd.DataFrame(worksheet.get_all_records())"],"metadata":{"id":"d1RfGOKC8i4I","executionInfo":{"status":"ok","timestamp":1730108249738,"user_tz":-330,"elapsed":6101,"user":{"displayName":"Baby Organo","userId":"18045061936877554975"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","source":["# Clean the 'Item name' column by extracting the part before '|'\n","data['Item name'] = data['Item name'].apply(lambda x: x.split('|')[0].strip())\n","data['Item name'] = data['Item name'].apply(lambda x: x.split('(')[0].strip())\n","\n","\n","import re\n","# Keywords to remove\n","keywords_to_remove = [\"Natural \", \"Kid&#39;s\", \"Nourishing \", \"&#39;s\", \"Ayurvedic \",\"BabyOrgano \",\"Babyorgano \", \"BabyOrgano - \",\"ayurvedic \",\"Nutriverse \"]\n","\n","# Join the keywords into a regex pattern\n","pattern = r'\\b(?:' + '|'.join(map(re.escape, keywords_to_remove)) + r')\\b'\n","\n","# Apply regex pattern to clean the 'Product Names' column\n","data['Item name'] = data['Item name'].apply(lambda x: re.sub(pattern, '', x).strip())\n","\n","\n","\n","# replacing baalprashan keywords\n","phrases_to_replace = [\n","    \"Baalprashan Immunity Drops\",\n","\n","    \"BaalPrashan Swarnaprashan Drops\"\n","]\n","\n","# Compile the regex pattern with the list of phrases\n","pattern = r'\\b(?:' + '|'.join(map(re.escape, phrases_to_replace)) + r')\\b'\n","\n","# Replace phrases in 'Product Names' column with \"Baalprashan\"\n","data['Item name'] = data['Item name'].str.replace(pattern, \"Baalprashan\", regex=True)\n","\n","\n","phrases_to_replace = [\n","    \"Suvarnaprashan Drops\",\n","    \"Swarnaprashan Drops\",\n","]\n","\n","# Compile the regex pattern with the list of phrases\n","pattern = r'\\b(?:' + '|'.join(map(re.escape, phrases_to_replace)) + r')\\b'\n","\n","# Replace phrases in 'Product Names' column with \"Baalprashan\"\n","data['Item name'] = data['Item name'].str.replace(pattern, \"Baalprashan\", regex=True)\n"],"metadata":{"id":"pzkgUmYH8i66","executionInfo":{"status":"ok","timestamp":1730108384053,"user_tz":-330,"elapsed":600,"user":{"displayName":"Baby Organo","userId":"18045061936877554975"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["# Initialize Tapas tokenizer and model\n","tokenizer = TapasTokenizer.from_pretrained(\"google/tapas-large-finetuned-wtq\")\n","model = TapasForQuestionAnswering.from_pretrained(\"google/tapas-large-finetuned-wtq\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AXBb3VU08i9I","executionInfo":{"status":"ok","timestamp":1730108389384,"user_tz":-330,"elapsed":3046,"user":{"displayName":"Baby Organo","userId":"18045061936877554975"}},"outputId":"ca1d153f-2da2-4825-bbf3-51338cf41216"},"execution_count":12,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.10/dist-packages/transformers/tokenization_utils_base.py:1601: FutureWarning: `clean_up_tokenization_spaces` was not set. It will be set to `True` by default. This behavior will be depracted in transformers v4.45, and will be then set to `False` by default. For more details check this issue: https://github.com/huggingface/transformers/issues/31884\n","  warnings.warn(\n"]}]},{"cell_type":"code","source":["def ask_question(table, question):\n","  inputs = tokenizer(table=data, queries=[question], return_tensors=\"pt\", padding=\"max_length\", truncation=True)\n","  print(inputs)\n","\n","  outputs = model(**inputs)\n","  print(outputs.logits)\n","  print(outputs.logits_aggregation)"],"metadata":{"id":"Uj3XfuAt8i_K","executionInfo":{"status":"ok","timestamp":1730108389385,"user_tz":-330,"elapsed":5,"user":{"displayName":"Baby Organo","userId":"18045061936877554975"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["# Convert the 'Date' column to datetime format for easier manipulation\n","data['Date'] = pd.to_datetime(data['Date'])\n","\n","# Function to get total for a specific column across multiple products for a given date or date range\n","def get_total_for_column_by_date(data, product_names, column, start_date, end_date=None):\n","    # Filter by the specified date or date range\n","    if end_date:\n","        date_filtered_df = data[(data['Date'] >= start_date) & (data['Date'] <= end_date)]\n","    else:\n","        date_filtered_df = data[data['Date'] == start_date]\n","\n","    total_value = 0\n","\n","    # Filter the DataFrame for the specified products\n","    product_filtered_df = date_filtered_df[date_filtered_df['Item name'].isin(product_names)]\n","\n","    # Sum the values for the specified column for the filtered products\n","    total_value = product_filtered_df[column].sum()\n","\n","    return total_value\n","\n","\n","# Example Usage:\n","products_to_query = [\"Ubtan\"]\n","column_to_sum = [\"Item revenue\",\"Items purchased\"]\n","start_date = '10/20/2024'     # mm/dd/yyyy\n","end_date = '10/24/2024'       # mm/dd/yyyy\n","\n","# Get total for the given date range\n","total = get_total_for_column_by_date(data, products_to_query, column_to_sum, start_date, end_date)\n","print(f\"Total {column_to_sum} from {start_date} to {end_date} for {', '.join(products_to_query)}: {total}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fYc0_mL08jBh","executionInfo":{"status":"ok","timestamp":1730108389385,"user_tz":-330,"elapsed":5,"user":{"displayName":"Baby Organo","userId":"18045061936877554975"}},"outputId":"69209a3d-8279-4727-b75b-5abf9c581d21"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["Total ['Item revenue', 'Items purchased'] from 10/20/2024 to 10/24/2024 for Ubtan: Item revenue       322382.0\n","Items purchased       680.0\n","dtype: float64\n"]}]},{"cell_type":"code","source":["data"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":649},"id":"AtiE4LHC8jFw","executionInfo":{"status":"ok","timestamp":1730108391604,"user_tz":-330,"elapsed":8,"user":{"displayName":"Baby Organo","userId":"18045061936877554975"}},"outputId":"18cc29f7-4787-4751-906f-415faa405381"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                     Item name       Date  Item revenue  Items purchased  \\\n","0          Cold Relief Roll On 2024-10-27       53800.0               88   \n","1                  Baalprashan 2024-10-27       50141.9               71   \n","2          Cold Relief Roll On 2024-10-27       36315.0              131   \n","3                  Baalprashan 2024-10-27       27951.0               40   \n","4                  Baalprashan 2024-10-27       22762.0               30   \n","...                        ...        ...           ...              ...   \n","49995  Hing Roll On Trial Pack 2024-05-01           0.0                0   \n","49996  Hing Roll On Trial Pack 2024-05-01           0.0                1   \n","49997  Hing Roll On Trial Pack 2024-05-01           0.0                0   \n","49998  Hing Roll On Trial Pack 2024-05-01           0.0                1   \n","49999  Hing Roll On Trial Pack 2024-05-01           0.0                2   \n","\n","       First time purchasers  Sessions  Engaged sessions  Engagement rate  \\\n","0                         76       168               168              1.0   \n","1                         59       134               134              1.0   \n","2                        127       443               443              1.0   \n","3                         35        72                72              1.0   \n","4                         24        44                44              1.0   \n","...                      ...       ...               ...              ...   \n","49995                      0         1                 1              1.0   \n","49996                      1         1                 1              1.0   \n","49997                      0         1                 1              1.0   \n","49998                      1         1                 1              1.0   \n","49999                      2         2                 2              1.0   \n","\n","       Bounce rate  Items checked out  Items added to cart  \\\n","0              0.0                207                    0   \n","1              0.0                206                    0   \n","2              0.0                567                    0   \n","3              0.0                 86                    0   \n","4              0.0                 66                    0   \n","...            ...                ...                  ...   \n","49995          0.0                  1                    0   \n","49996          0.0                  1                    0   \n","49997          0.0                  2                    0   \n","49998          0.0                  1                    0   \n","49999          0.0                  2                    0   \n","\n","                              Session source / medium  \n","0      Meta Ads A1 / cold remarket | BOF+MOF | 23 aug  \n","1                               bo_facebook / inhouse  \n","2                            Meta Ads / Varsha Shukla  \n","3                               pp_facebook / inhouse  \n","4                                        google / cpc  \n","...                                               ...  \n","49995             facebook_ads_ppm / Facebook_Stories  \n","49996                                    google / cpc  \n","49997                                google / organic  \n","49998                            linktr.ee / referral  \n","49999                           pp_facebook / inhouse  \n","\n","[50000 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-c0c400da-ef86-492f-a6df-b5fe12ebb6f2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Item name</th>\n","      <th>Date</th>\n","      <th>Item revenue</th>\n","      <th>Items purchased</th>\n","      <th>First time purchasers</th>\n","      <th>Sessions</th>\n","      <th>Engaged sessions</th>\n","      <th>Engagement rate</th>\n","      <th>Bounce rate</th>\n","      <th>Items checked out</th>\n","      <th>Items added to cart</th>\n","      <th>Session source / medium</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Cold Relief Roll On</td>\n","      <td>2024-10-27</td>\n","      <td>53800.0</td>\n","      <td>88</td>\n","      <td>76</td>\n","      <td>168</td>\n","      <td>168</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>207</td>\n","      <td>0</td>\n","      <td>Meta Ads A1 / cold remarket | BOF+MOF | 23 aug</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Baalprashan</td>\n","      <td>2024-10-27</td>\n","      <td>50141.9</td>\n","      <td>71</td>\n","      <td>59</td>\n","      <td>134</td>\n","      <td>134</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>206</td>\n","      <td>0</td>\n","      <td>bo_facebook / inhouse</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Cold Relief Roll On</td>\n","      <td>2024-10-27</td>\n","      <td>36315.0</td>\n","      <td>131</td>\n","      <td>127</td>\n","      <td>443</td>\n","      <td>443</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>567</td>\n","      <td>0</td>\n","      <td>Meta Ads / Varsha Shukla</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Baalprashan</td>\n","      <td>2024-10-27</td>\n","      <td>27951.0</td>\n","      <td>40</td>\n","      <td>35</td>\n","      <td>72</td>\n","      <td>72</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>86</td>\n","      <td>0</td>\n","      <td>pp_facebook / inhouse</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Baalprashan</td>\n","      <td>2024-10-27</td>\n","      <td>22762.0</td>\n","      <td>30</td>\n","      <td>24</td>\n","      <td>44</td>\n","      <td>44</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>66</td>\n","      <td>0</td>\n","      <td>google / cpc</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>49995</th>\n","      <td>Hing Roll On Trial Pack</td>\n","      <td>2024-05-01</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>facebook_ads_ppm / Facebook_Stories</td>\n","    </tr>\n","    <tr>\n","      <th>49996</th>\n","      <td>Hing Roll On Trial Pack</td>\n","      <td>2024-05-01</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>google / cpc</td>\n","    </tr>\n","    <tr>\n","      <th>49997</th>\n","      <td>Hing Roll On Trial Pack</td>\n","      <td>2024-05-01</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>google / organic</td>\n","    </tr>\n","    <tr>\n","      <th>49998</th>\n","      <td>Hing Roll On Trial Pack</td>\n","      <td>2024-05-01</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>linktr.ee / referral</td>\n","    </tr>\n","    <tr>\n","      <th>49999</th>\n","      <td>Hing Roll On Trial Pack</td>\n","      <td>2024-05-01</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1.0</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>pp_facebook / inhouse</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>50000 rows × 12 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c0c400da-ef86-492f-a6df-b5fe12ebb6f2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c0c400da-ef86-492f-a6df-b5fe12ebb6f2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c0c400da-ef86-492f-a6df-b5fe12ebb6f2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-47bc72ff-5ec0-4833-a3ad-b0b9e05b6a6a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-47bc72ff-5ec0-4833-a3ad-b0b9e05b6a6a')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-47bc72ff-5ec0-4833-a3ad-b0b9e05b6a6a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_5ebcfb5e-2790-44fd-8d92-431564fee269\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('data')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_5ebcfb5e-2790-44fd-8d92-431564fee269 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('data');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 50000,\n  \"fields\": [\n    {\n      \"column\": \"Item name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 90,\n        \"samples\": [\n          \"Baby Bath Powder and 99% pure rose water Combo\",\n          \"Mosquito and Cold Protection Combo for kids\",\n          \"Total Skin Care Combo\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2024-05-01 00:00:00\",\n        \"max\": \"2024-10-27 00:00:00\",\n        \"num_unique_values\": 180,\n        \"samples\": [\n          \"2024-10-08 00:00:00\",\n          \"2024-09-15 00:00:00\",\n          \"2024-05-27 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Item revenue\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3362.7549850862656,\n        \"min\": 0.0,\n        \"max\": 183054.1,\n        \"num_unique_values\": 1684,\n        \"samples\": [\n          22130.6,\n          877.1,\n          1546.8\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Items purchased\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6,\n        \"min\": 0,\n        \"max\": 185,\n        \"num_unique_values\": 92,\n        \"samples\": [\n          68,\n          4,\n          47\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"First time purchasers\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5,\n        \"min\": 0,\n        \"max\": 180,\n        \"num_unique_values\": 88,\n        \"samples\": [\n          58,\n          76,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Sessions\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 1,\n        \"max\": 548,\n        \"num_unique_values\": 174,\n        \"samples\": [\n          122,\n          141,\n          189\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Engaged sessions\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12,\n        \"min\": 0,\n        \"max\": 548,\n        \"num_unique_values\": 175,\n        \"samples\": [\n          138,\n          141,\n          149\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Engagement rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09038557628098591,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 115,\n        \"samples\": [\n          0.976744186,\n          0.9980806142,\n          0.9615384615\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Bounce rate\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.09038557628099525,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 115,\n        \"samples\": [\n          0.02325581395,\n          0.001919385797,\n          0.03846153846\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Items checked out\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 564,\n        \"min\": 0,\n        \"max\": 126212,\n        \"num_unique_values\": 222,\n        \"samples\": [\n          108,\n          176,\n          52\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Items added to cart\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 0,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Session source / medium\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 506,\n        \"samples\": [\n          \"MetaAds / Great Wellness 13-09 \\u2013 Copy\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["unique_values = data[\"Item name\"].unique()\n","unique_values"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"v_7vTOFje7Gs","executionInfo":{"status":"ok","timestamp":1730108393635,"user_tz":-330,"elapsed":11,"user":{"displayName":"Baby Organo","userId":"18045061936877554975"}},"outputId":"3a47af38-fc62-458b-816a-e09945909ccb"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['Cold Relief Roll On', 'Baalprashan', 'Shankhpushpi Syrup',\n","       'Ubtan', 'Hing Roll On', 'Sitopaladi Churna',\n","       'Herbal Chocovita Milk Mix &amp; Nutrition Drink',\n","       'Kesar Haldi Milk Mix', 'Cold &amp; Cough Defense Combo for Kids',\n","       'Pure Rose Water', 'Bath Care Combo',\n","       'Best Brain Booster Combo For Kids', 'Ubtan + Pure Rose Water',\n","       'Lip Balm', 'Ubtan &amp; Baalprashan Baalprashan Combo for Kids',\n","       'Baalprashan &amp; Sitopaladi Churna Combo', 'Cold Care Combo',\n","       'Manjishthadi Abhyang Baby Massage Oil',\n","       'Skin Nourishment Combo for Kids', 'Herbal  Toothpaste',\n","       'Dry Skin Care Combo for Kids', 'Cough and Colic Roll On Combo',\n","       'Mosquito and Cold Protection Combo for kids',\n","       'Nirgundi Hair Oil For Kids', 'Hair Oil For Babies',\n","       'Baby Body Wash', 'Baby Shampoo',\n","       'BugsAway Mosquito Repellent Spray',\n","       'Waterless Hand Wash for kids', 'EasyGo Travel Kit for Baby Care',\n","       'Baby Lotion', 'Soft &amp; Gentle Talc Free Baby Powder',\n","       'Mosquito Repellent Fabric Roll-On',\n","       'Herbal ChocoVita Milk Mix &amp; Nutrition Drink – Trial Pack of 5',\n","       'Overall Protection Combo',\n","       'Lip Care Balm and Baalprashan Combo for Kids',\n","       'Cold Relief Roll on &amp; Ubtan Combo', 'Toothpaste for Kids',\n","       'Sitopaladi Churna to Relieve Dry Cough &amp; Cold in Kids',\n","       'Kids Immunity and Height &amp; Weight Gain Combo',\n","       'Baby Bath Powder and 99% pure rose water Combo',\n","       'Cold and Cough Relief Combo',\n","       'Immunity Booster and Height &amp; Weight Gain Trial Combo',\n","       'Baby Wellness Gift Hamper',\n","       'Sitopaladi Churna For Dry Cough &amp; Cold of Kids',\n","       'Baby Bath and Skin Care Super Saver Combo',\n","       'Baby Bath Care Combo', 'Bath Care Essentials Gift Pack',\n","       'Monsoon Defense Combo for Kids', 'Immunity &amp; Oral Care Combo',\n","       'Cold Relief Roll On Trial Pack - 5ML', 'Golden Wellness Duo',\n","       'Manjishthadi Abhyang Massage Oil and Ubtan Combo for Babies',\n","       'Morning Routine Combo', 'Gift Test - Strawberry',\n","       'Total Skin Care Combo',\n","       'Swarnaprashan drops and Mosquito Repellent Roll-On Combo',\n","       'Baalprashan &amp; Hing Roll On Combo for Kids',\n","       'Swarnaprashan drops, Roll on &amp; Chocovita milk mix combo',\n","       'Special Skin Care Combo for Kids',\n","       'Ubtan and Soothing Baby Powder Combo',\n","       'Baalprashan and Baby Massage Oil Combo',\n","       'Super Saving Bath Care Combo For Kids',\n","       'Super Saver Swarnaprashan &amp; Gentle Baby Powder Combo',\n","       'Baalprashan Baalprashan', 'Complete Monsoon Care Combo for Kids',\n","       'Soft &amp; Gentle Baby Powder', 'Sitopaladi Churna For Kids',\n","       'Baalprashan and Mosquito Repellent Spray Combo',\n","       'Herbal Toothpaste Trial Pack',\n","       'Herbal Chocovita Health &amp; Nutrition Drink', 'Toothpaste',\n","       'Tomatino Baby Shampoo',\n","       'Non Sticky Baby Lotion for Deep Nourishment and Smooth Skin',\n","       'Hing Roll On Trial Pack',\n","       'BugsAway Mosquito Repellent Fabric Spray',\n","       'Waterless Hand Wash for kids. For 99.9% Germs Protection &amp; Deep Cleaning',\n","       'Winter Baby Essential Combo',\n","       'Gentle Baby Wash &amp; Baby Lotion Combo', 'BabyOrgano',\n","       'Manjishthadi Abhyang Massage Oil, 100ml',\n","       'Herbal ChocoVita – Trial Pack of 5',\n","       'BugsAway Mosquito Repellent Fabric Roll-On  - 9ml',\n","       'Chocovita Trial Pack', 'Gentle Baby Body Wash',\n","       'Baalprashan Swarnaprashan', 'Herbal Chocovita',\n","       'Cold Relief Roll On Trial Pack',\n","       'Soothing Baby Massage Oil, 100ml',\n","       'Soothing Baby Massage Oil and Ubtan Combo for Babies'],\n","      dtype=object)"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","execution_count":18,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ieE2FDAkiL2_","executionInfo":{"status":"ok","timestamp":1730108432148,"user_tz":-330,"elapsed":612,"user":{"displayName":"Baby Organo","userId":"18045061936877554975"}},"outputId":"7d2c927d-7e2d-4f4c-82b9-1b096ff489e4"},"outputs":[{"output_type":"stream","name":"stdout","text":["Total ['Item revenue', 'Items purchased'] from 10-01-2024 to 10-27-2024 for Ubtan, Baby Shampoo: Item revenue       1820685.3\n","Items purchased       3790.0\n","dtype: float64\n"]}],"source":["# Example Usage:\n","products_to_query = [\"Ubtan\",\"Baby Shampoo\"]\n","column_to_sum = [\"Item revenue\",\"Items purchased\"]\n","start_date = '10-01-2024'\n","end_date = '10-27-2024'\n","\n","# Get total for the given date range\n","total = get_total_for_column_by_date(data, products_to_query, column_to_sum, start_date, end_date)\n","print(f\"Total {column_to_sum} from {start_date} to {end_date} for {', '.join(products_to_query)}: {total}\")"]}]}